{"version":3,"file":"cdiscount.min.js","sources":["../src/cdiscount.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Handling and calculate the values before and after discount in top up form and charger form.\n *\n * @module     enrol_wallet/cdiscount\n * @copyright  2024 Mohammad Farouk <phun.for.physics@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n/* eslint-disable camelcase */\nimport {get_string} from 'core/str';\n\nexport const init = (formid, formType) => {\n\n    let form;\n    let valueInput;\n    let opInput;\n    let categoryInput;\n    let valueAfterInput;\n    let chargingLabel = '';\n    let calculateValueHolder;\n    let rules = [];\n\n    /**\n     * For the charger form.\n     * calculate the actual charge value and display it.\n     */\n    function calculateCharge() {\n        var value = parseFloat(valueInput.value);\n        var op = opInput.value;\n        var cat = parseInt(categoryInput.value);\n\n        var maxDiscount = 0;\n        var calculatedValue = value;\n        for (var i = 0; i < rules.length; i++) {\n            var category = rules[i].category;\n            if (category !== cat) {\n                continue;\n            }\n            var discount = rules[i].discount;\n            var condition = rules[i].condition;\n            var valueBefore = value + (value * discount / (1 - discount));\n\n            if (valueBefore >= condition && discount > maxDiscount) {\n                maxDiscount = discount;\n                calculatedValue = valueBefore;\n            }\n        }\n\n        if (op == \"credit\") {\n            calculateValueHolder.innerHTML = chargingLabel + Math.round(calculatedValue * 100) / 100;\n            calculateValueHolder.style.display = '';\n        } else {\n            calculateValueHolder.innerHTML = \"\";\n            calculateValueHolder.style.display = 'none';\n        }\n    }\n\n    /**\n     * Add listeners for the inputs of charger form.\n     */\n    function addListenersChargerForm() {\n        valueInput.addEventListener('change', () => {\n            calculateCharge();\n        });\n        valueInput.addEventListener('keyup', () => {\n            calculateCharge();\n        });\n        opInput.addEventListener('change', () => {\n            calculateCharge();\n        });\n        categoryInput.addEventListener('change', () => {\n            calculateCharge();\n        });\n    }\n\n    /**\n     * Continue the procedure of the charger form.\n     */\n    function proceedChargerForm() {\n        calculateValueHolder = form.querySelector(\"[data-holder=calculated-value]\");\n        opInput = form.querySelector(\"[name=op]\");\n        addListenersChargerForm();\n        get_string('charging_value', 'enrol_wallet').done((data) => {\n            chargingLabel = data;\n        });\n    }\n\n    /**\n     * Calculate the value after discount and put it in the discounted input.\n     */\n    function calculateAfter() {\n        var value = parseFloat(valueInput.value);\n        var cat = parseInt(categoryInput.value);\n        var maxDiscount = 0;\n        for (var i = 0; i < rules.length; i++) {\n            var category = rules[i].category;\n            if (category !== cat) {\n                continue;\n            }\n            var discount = rules[i].discount;\n            var condition = rules[i].condition;\n\n            if (value >= condition && discount > maxDiscount) {\n                maxDiscount = discount;\n            }\n        }\n\n        var calculatedValue = value - (value * maxDiscount);\n        valueAfterInput.value = calculatedValue;\n    }\n\n    /**\n     * Calculate the value before the discount and put it in the value input.\n     */\n    function calculateBefore() {\n        var value = parseFloat(valueAfterInput.value);\n        var cat = parseInt(categoryInput.value);\n        var maxDiscount = 0;\n        for (var i = 0; i < rules.length; i++) {\n            var category = rules[i].category;\n            if (category !== cat) {\n                continue;\n            }\n            var discount = rules[i].discount;\n            var condition = rules[i].condition;\n\n            var valueBefore = value / (1 - discount);\n            if (valueBefore >= condition && discount > maxDiscount) {\n                maxDiscount = discount;\n            }\n        }\n\n        var realValueBefore = value / (1 - maxDiscount);\n        valueInput.value = realValueBefore;\n    }\n    /**\n     * Hide discount rule for non-selected category.\n     */\n    function hideElse() {\n        let container = form.getElementsByClassName('enrol-wallet-discounts-container');\n\n        let cat = parseInt(categoryInput.value);\n        for (let i = 0; i < container.length; i++) {\n            let children = container[i].children;\n\n            for (let x = 0; x < children.length; x++) {\n                let catid = children[x].getAttribute('data-catid');\n                if (catid == cat) {\n                    children[x].style.display = '';\n                } else {\n                    children[x].style.display = 'none';\n                }\n            }\n        }\n    }\n    /**\n     * Adding event listeners to the top up form.\n     */\n    function addListenersTopUpForm() {\n        valueInput.onchange = calculateAfter;\n        valueInput.onkeyup = calculateAfter;\n        valueAfterInput.onchange = calculateBefore;\n        valueAfterInput.onkeyup = calculateBefore;\n        categoryInput.addEventListener('change', () => {\n            calculateAfter();\n            hideElse();\n        });\n    }\n\n    /**\n     * Continue the procedure for the top up form.\n     */\n    function proceedTopUpForm() {\n        valueAfterInput = form.querySelector('[name=value-after]');\n        addListenersTopUpForm();\n    }\n\n    form = document.getElementById(formid);\n    valueInput = form.querySelector(\"[name=value]\");\n    categoryInput = form.querySelector(\"[name=category]\");\n\n    for (let i = 1; ; i++) {\n        let element = form.querySelector(\"[name=discount_rule_\" + i + \"]\");\n        if (!element) {\n            break;\n        }\n        var object = JSON.parse(element.value);\n        object.condition = parseFloat(object.condition);\n        object.discount = parseFloat(object.discount);\n        object.category = parseInt(object.category);\n        rules.push(object);\n    }\n    hideElse();\n    if (formType == 'charge') {\n        proceedChargerForm();\n    } else {\n        proceedTopUpForm();\n    }\n};"],"names":["formid","formType","form","valueInput","opInput","categoryInput","valueAfterInput","calculateValueHolder","chargingLabel","rules","calculateCharge","value","parseFloat","op","cat","parseInt","maxDiscount","calculatedValue","i","length","category","discount","valueBefore","condition","innerHTML","Math","round","style","display","calculateAfter","calculateBefore","realValueBefore","hideElse","container","getElementsByClassName","children","x","catid","getAttribute","document","getElementById","querySelector","element","object","JSON","parse","push","addEventListener","done","data","onchange","onkeyup"],"mappings":"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"}